version: 2

jobs:
  fetch_dependencies:
    docker:
    - image: ixai/pipenv:3.6
      environment:
        PIPENV_VENV_IN_PROJECT: "true"
    steps:
    - checkout
    - restore_cache:
        keys:
        - v2-pipenv-deps-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
        - v2-pipenv-deps-{{ .Branch }}
        - v2-pipenv-deps-master
        - v2-pipenv-deps
    - run: pipenv install -d
    - save_cache:
        key: v2-pipenv-deps-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
        paths:
        - .venv
    - persist_to_workspace:
        root: ./
        paths:
        - .venv
  lint:
    docker:
    - image: ixai/pipenv:3.6
      environment:
        PIPENV_VENV_IN_PROJECT: "true"
    steps:
    - checkout
    - attach_workspace:
        at: ./
    - run:
        name: Lint (flake8)
        command: pipenv run lint
  unit_test:
    docker:
    - image: ixai/pipenv:3.6
      environment:
        PIPENV_VENV_IN_PROJECT: "true"
    steps:
    - checkout
    - attach_workspace:
        at: ./
    - run:
        name: Unit test (nose)
        command: pipenv run test
  type_check:
    docker:
    - image: ixai/pipenv:3.6
      environment:
        PIPENV_VENV_IN_PROJECT: "true"
    steps:
    - checkout
    - attach_workspace:
        at: ./
    - run:
        name: Type Check (mypy)
        command: pipenv run type_check
    - store_artifacts:
        path: ./.mypy-report
  format_check:
    docker:
    - image: ixai/pipenv:3.6
      environment:
        PIPENV_VENV_IN_PROJECT: "true"
    steps:
    - checkout
    - attach_workspace:
        at: ./
    - run:
        name: Format Check (yapf)
        command: pipenv run format_check

workflows:
  version: 2
  continuous_integration:
    jobs:
    - fetch_dependencies
    - lint:
        requires:
        - fetch_dependencies
    - unit_test:
        requires:
        - fetch_dependencies
    - type_check:
        requires:
        - fetch_dependencies
    - format_check:
        requires:
        - fetch_dependencies
